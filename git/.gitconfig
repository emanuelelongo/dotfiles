[user]
	name = Emanuele Longo
    email = emanuele.longo@ynap.com

[core]
	autocrlf = input

[push]
	default = simple

[alias]
	l = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	lga = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	hs = log --follow -p
	files = diff-tree -r --name-only -no-commit-it
	puffo = pull --ff-only
	converge = "!git fetch && git reset --hard FETCH_HEAD"
	cane = commit --amend --no-edit
	sync =  "!git fetch -p && git remote prune origin && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"
	ba = "! for branch in `git branch -r | grep -v HEAD`;do echo `git show --pretty=format:\"%Cred %cn %>|(40) %Cblue %ar %>|(80) %Creset\" $branch | head -n 1` $branch; done | sort -r"
	b = "!git show-branch --list $(git rev-parse --abbrev-ref HEAD)"
	all = "!f() { ls -R -d */.git | sed s,/.git,, | xargs -P10 -I{} git -C {} $1; }; f"

[http]
    sslVerify = false

[diff]
	tool = bc3

[merge]
	tool = bc3

[mergetool "bc3"]
	trustExitCode = true
